#!/usr/bin/ruby

module Docker
  extend self
  def build
    # set image tag if it hasnt been set
    required_env("DOCKER_USERNAME")
    required_env("DOCKER_PASSWORD")
    required_env("DOCKER_IMAGE")

    env_check("IMAGE_TAG", `git rev-parse HEAD`)
    env_check("DOCKER_REGISTRY", "https://hub.docker.com")

    dockerfile = from_env("BUILD_DOCKERFILE", ".")

    # login to docker hub
    command('docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" $DOCKER_REGISTRY')

    # build docker image
    command('docker build --pull -t "$DOCKER_IMAGE:$IMAGE_TAG" #{dockerfile}')

    # push docker image
    command('docker push "$DOCKER_IMAGE:$IMAGE_TAG"')
  end
end

# if main file require base and run main function
if __FILE__ == $PROGRAM_NAME
  base_path = 
  if ARGV[0]
    ARGV[0]
  else
    File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib/base.rb'))
  end

  unless File.file?(base_path)
    puts "Can't find base ruby file at #{base_path}"
    exit 1
  end
  require base_path

  Docker.build if __FILE__ == $PROGRAM_NAME
end
